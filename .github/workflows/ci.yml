name: CI
on:
  pull_request:
    types: [opened, reopened]
  push:
    branches: ['**']

jobs:
  build-image:
    name: Build new images locally
    runs-on: ubuntu-18.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for imagine to detect -dev suffix
      - uses: docker://docker.io/cilium/image-maker:8fb8f8325d966505552183f756eae4e3cb60d195
        name: Build all images and generate manifests
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        with:
          entrypoint: make
          args: images.all manifests.generate
      - name: Get image cache key
        id: get-image-cache-key
        run: .github/workflows/ci.get-image-cache-key.sh
      - name: Cache OCI image tarballs and generated manifests
        # cache is normally restored at the start, but it's not used in this case, as it is
        # not being used to store anything between runs, the key is specific to this run only
        # and is only used to pass image between jobs without having to push it to a registry;
        # the artifacts are not used here due to costs
        uses: actions/cache@v2
        with:
          #Â generate a unique key for the workflow run
          key: ${{ steps.get-image-cache-key.outputs.key }}
          path: |
            image-*.oci
            image-*.tag
            config/operator/operator-test.yaml
    outputs:
      image-cache-key: ${{ steps.get-image-cache-key.outputs.key }}
  test-controllers:
    needs: build-image
    strategy:
      matrix:
        kube_version: [1.17, 1.18]
    name: Create kind clusters and test new image
    runs-on: ubuntu-18.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Restore OCI image and manifest from cache
        uses: actions/cache@v2
        with:
          key: ${{ needs.build-image.outputs.image-cache-key }}
          path: |
            image-*.oci
            image-*.tag
            config/operator/operator-test.yaml
      - name: Create Kubernetes cluster (${{ matrix.kube_version }})
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        with:
          entrypoint: kind
          args: create cluster --config /etc/kind/${{ matrix.kube_version }}/standard-github-actions-cluster.yaml --kubeconfig /github/workspace/kubeconfig
      - name: Load OCI image into the cluster
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        with:
          entrypoint: kind
          args: load image-archive image-gke-test-cluster-operator.oci
      - name: Set kubeconfig context
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        env:
          KUBECONFIG: "/github/workspace/kubeconfig"
        with:
          entrypoint: kubectl
          args: config use-context kind-kind
      - name: Deploy Cilium and Config Connector CRDs
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        env:
          KUBECONFIG: "/github/workspace/kubeconfig"
        with:
          entrypoint: kubectl
          args: apply --filename cilium-kind.yaml --filename config/cnrm-system/crds.yaml
      - name: Wait for nodes to become ready
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        env:
          KUBECONFIG: "/github/workspace/kubeconfig"
        with:
          entrypoint: kubectl
          args: wait nodes --for=condition=Ready --all --timeout=5m
      - name: Deploy Cert Manager
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        env:
          KUBECONFIG: "/github/workspace/kubeconfig"
        with:
          entrypoint: kubectl
          args: apply --filename config/cert-manager/cert-manager.yaml
      - name: Run controller tests
        uses: docker://docker.io/cilium/kube-test:f0e78da899921dede4f2d752f21a6f4a3e1277d3
        env:
          KUBECONFIG: "/github/workspace/kubeconfig"
        timeout-minutes: 10
        with:
          entrypoint: make
          args: test.controllers
  push-images:
    if: github.repository == 'isovalent/gke-test-cluster-operator' && github.ref == 'refs/heads/main'
    needs: test-controllers
    name: Build all images and push to the registry
    runs-on: ubuntu-18.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for imagine to detect -dev suffix
      - uses: docker://docker.io/cilium/image-maker:8fb8f8325d966505552183f756eae4e3cb60d195
        name: Build and push all images
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        with:
          entrypoint: make
          args: images.all PUSH=true
