// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/isovalent/gke-test-cluster-management/operator/api/v1alpha1

package v1alpha1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// TestClusterGKESpec defines the desired state of TestClusterGKE
TestClusterGKESpec :: {
	// ConfigTemplate is the name of configuration template to use
	configTemplate?: null | string @go(ConfigTemplate,*string)

	// Location is a GCP zone or region
	location?: null | string @go(Location,*string)

	// KubernetesVersion is the version of Kubernetes to use
	kubernetesVersion?: null | string @go(KubernetesVersion,*string)

	// JobSpec is the specification of test job
	jobSpec?: null | JobSpec @go(JobSpec,*JobSpec)
}

// JobSpec is the specification of test job
JobSpec :: {
	// RunnerImage is the image that will drive the tests
	runnerImage?: null | string @go(RunnerImage,*string)

	// ImagesToTest is a set of application images that will be tested
	imagesToTest?: null | {[string]: string} @go(ImagesToTest,*map[string]string)

	// RunnerConfigMap is a name of configmap of the runner
	runnerConfigMap?: null | string @go(RunnerConfigMap,*string)
}

// TestClusterGKEStatus defines the observed state of TestClusterGKE
TestClusterGKEStatus :: {
}

// TestClusterGKE is the Schema for the testclustergkes API
TestClusterGKE :: {
	metav1.TypeMeta
	metadata?: metav1.ObjectMeta    @go(ObjectMeta)
	spec?:     TestClusterGKESpec   @go(Spec)
	status?:   TestClusterGKEStatus @go(Status)
}

// TestClusterGKEList contains a list of TestClusterGKE
TestClusterGKEList :: {
	metav1.TypeMeta
	metadata?: metav1.ListMeta @go(ListMeta)
	items: [...TestClusterGKE] @go(Items,[]TestClusterGKE)
}
